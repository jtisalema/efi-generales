package com.tefisoft.efiweb.entidad;
// Generated 27/06/2017 18:17:37 by Hibernate Tools 4.3.1


import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * BrkTEjecutivos generated by hbm2java
 */
@Entity
@Table(name = "BRK_T_EJECUTIVOS")
@IdClass(BrkTEjecutivos.BrkTEjecutivosId.class)
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class BrkTEjecutivos implements java.io.Serializable {


    @Id
    @Column(name = "CD_COMPANIA", nullable = false, precision = 22)
    private Integer cdCompania;

    @Id
    @Column(name = "CD_EJECUTIVO", nullable = false, precision = 22)
    private Integer cdEjecutivo;


    @Column(name = "CD_ASEGURADORA", nullable = false, precision = 22)
    private Integer cdAseguradora;


    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "CD_CLIENTE")
    private BrkTClientes cliente;


    @Column(name = "NM_EJECUTIVO", nullable = false, length = 50)
    private String nmEjecutivo;


    @Column(name = "AP_EJECUTIVO", length = 50)
    private String apEjecutivo;


    @Column(name = "ESTADO", length = 1)
    private Character estado;


    @Column(name = "RUC_CED", length = 15)
    private String rucCed;


    @Column(name = "CARGO", length = 50)
    private String cargo;


    @Temporal(TemporalType.DATE)
    @Column(name = "FC_NACIMIENTO", length = 7)
    private Date fcNacimiento;


    @Column(name = "ENVIO_DOC", precision = 5, scale = 0)
    private Integer envioDoc;


    @Column(name = "CONTRATANTE", precision = 5, scale = 0)
    private Integer contratante;


    @Column(name = "ENVIO_VENC", length = 1)
    private Character envioVenc;


    @Temporal(TemporalType.DATE)
    @Column(name = "FC_ETIQUETA", length = 7)
    private Date fcEtiqueta;


    @Column(name = "OBSERVACIONES", length = 400)
    private String observaciones;


    @Column(name = "IMPRIMIR", precision = 1, scale = 0)
    private Boolean imprimir;


    @Column(name = "TITULO", length = 20)
    private String titulo;


    @Column(name = "NM_CONYUGE", length = 50)
    private String nmConyuge;


    @Column(name = "AP_CONYUGE", length = 50)
    private String apConyuge;


    @Column(name = "ESTADO_CIVIL", length = 50)
    private String estadoCivil;

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "ejecutivo")
    private Set<BrkTTelefonos> telefonos = new HashSet<>(0);


    @Getter
    @Setter
    @AllArgsConstructor
    @NoArgsConstructor
    public static class BrkTEjecutivosId implements java.io.Serializable {


        private Integer cdCompania;
        private Integer cdEjecutivo;


        public boolean equals(Object other) {
            if ((this == other)) return true;
            if ((other == null)) return false;
            if (!(other instanceof BrkTEjecutivosId)) return false;
            BrkTEjecutivosId castOther = (BrkTEjecutivosId) other;

            return ((this.getCdCompania() == castOther.getCdCompania()) || (this.getCdCompania() != null && castOther.getCdCompania() != null && this.getCdCompania().equals(castOther.getCdCompania())))
                    && ((this.getCdEjecutivo() == castOther.getCdEjecutivo()) || (this.getCdEjecutivo() != null && castOther.getCdEjecutivo() != null && this.getCdEjecutivo().equals(castOther.getCdEjecutivo())));
        }

        public int hashCode() {
            int result = 17;

            result = 37 * result + (getCdCompania() == null ? 0 : this.getCdCompania().hashCode());
            result = 37 * result + (getCdEjecutivo() == null ? 0 : this.getCdEjecutivo().hashCode());
            return result;
        }


    }
}